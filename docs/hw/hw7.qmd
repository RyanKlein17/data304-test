---
title: "hw7"
author: "Ryan Klein"
format: html
editor: visual
embed-resources: true
---

## Homework 7

Import Packages

```{python}
import altair as alt
import pandas as pd
from altair import datum
```

```{python}
alt.data_transformers.disable_max_rows()
```

### Part 1

```{python}
gas_gap_data_url = "https://calvin-data304.netlify.app/data/pump_price_for_gasoline_us_per_liter.csv"
gas_gap_data = pd.read_csv(gas_gap_data_url)
gas_gap_data.head()
```

We account for several label discrepencies between the datasets.

```{python}
gas_gap_data.at[35, 'country'] = "Dem. Rep. Congo"
gas_gap_data.at[172, 'country'] = "United States of America"
gas_gap_data.at[28, 'country'] = "Central African Rep."
gas_gap_data.at[58, 'country'] = "United Kingdom"
gas_gap_data.at[152, 'country'] = "S. Sudan"
gas_gap_data.at[85, 'country'] = "Kyrgyzstan"
gas_gap_data.at[19, 'country'] = "Bosnia and Herz."
gas_gap_data.at[33, 'country'] = "CÃ´te d'Ivoire"
gas_gap_data.at[4, 'country'] = "United Arab Emirates"
gas_gap_data.at[46, 'country'] = "Dominican Rep."
gas_gap_data.at[108, 'country'] = "Macedonia"
```

```{python}
countries = alt.topo_feature('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json', feature='countries')
country_map = alt.Chart(countries).mark_geoshape(
    fill='#aaaaaa',
    stroke='#000000'
).project('mercator')

country_map.properties(width = 600, height = 400)
```

```{python}
country_map.transform_lookup(
  lookup='properties.name',
  from_=alt.LookupData(gas_gap_data, 'country', ['2012'])
  ).encode(
    fill = "2012:Q",
    tooltip = ["properties.name:O", "2012:Q"]
    ).properties(width = 600, height = 400, title="Gas rate: US $ per liter")
```

### Part 2

```{python}
democracy_url = "https://calvin-data304.netlify.app/data/wvs.csv"
democracy_data = pd.read_csv(democracy_url)
```

Wrangle the total number of respondants for each nation

```{python}
respondants_per_country = pd.DataFrame(democracy_data.value_counts("country"))
respondants_per_country.reset_index(inplace=True)
respondants_per_country = respondants_per_country.rename(columns={0:"total"})
```

```{python}
base = alt.Chart(respondants_per_country).encode(
    alt.X(field ='country', type="ordinal", sort="-y"),
    alt.Y(field ='total', type="quantitative")
).properties(width=300,height=300,title="Number of Respondants")
base.mark_bar()
```

### Part 3
Age3
```{python}
age3_facet = alt.Chart(democracy_data).mark_boxplot(extent="min-max").encode(
    alt.X(field = "age", type = "quantitative", title = "Age in Years"),
    alt.Y(field = "age3", type = "nominal"),
    alt.Color("age3:N")
    #alt.Tooltip(["min(age)", "max(age)"])
).properties(
  width = 300, height = 75
).facet(
  facet = "country:O",
  columns=3
)
age3_facet
```
Age6
```{python}
age6_facet = alt.Chart(democracy_data).mark_boxplot(extent="min-max").encode(
    alt.X(field = "age", type = "quantitative", title = "Age in Years"),
    alt.Y(field = "age6", type = "nominal"),
    alt.Color("age6:N")
).properties(
  width = 300, height = 150
).facet(
  facet = "country:O",
  columns=3
)
age6_facet
```

### Part 4

Skipped.  Will come back to later if time allows.

### Part 5
```{python}
lines = alt.Chart(democracy_data).mark_line().encode(
    x=alt.X(field = "age6", type = "ordinal", sort = "-x"),
    y=alt.Y("mean(democracy_importance):Q"),
).properties(
  width = 200, height = 400
)

bands = alt.Chart(democracy_data).mark_errorband().encode(
    x=alt.X(field = "age6", type = "ordinal", sort = "-x", title = "Age Grouping"),
    y=alt.Y(field = "democracy_importance", type = "quantitative", title = "Average importance of democracy"),
).properties(
  width = 200, height = 400,
  title = ""
)
alt.layer(lines + bands).facet(
  facet = "country:O"
)
```

### Part 6
```{python}
lines = alt.Chart(democracy_data).mark_line().encode(
    x=alt.X(field = "age", type = "ordinal", sort = "-x"),
    y=alt.Y("mean(democracy_importance):Q"),
).properties(
  width = 200, height = 400
)

bands = alt.Chart(democracy_data).mark_errorband().encode(
    x=alt.X(field = "age", type = "ordinal", sort = "-x", title = "Age Grouping"),
    y=alt.Y(field = "democracy_importance", type = "quantitative", title = "Average importance of democracy"),
).properties(
  width = 200, height = 400,
  title = ""
)
alt.layer(lines + bands).facet(
  facet = "country:O"
)
```
Using "age" instead of "age6" makes the graphic worse, because "age" will calculate the statistics for each of the ages present in the dataset.  On the other hand, the "age6" is useful, because it bins each of the cases into 6 bins that are defined by an age range.  This makes the plot much less chaotic and much more interpretible.

### Part 7
```{python}
loess_chart_base = alt.Chart(democracy_data).encode(
  x=alt.X(field = "age6", type = "ordinal", sort = "-x", title = "Age Grouping"),
  y=alt.Y(field = "democracy_importance", type = "quantitative", title = "Average importance of democracy"),
  ).properties(
    width = 200, height = 400,
    title = ""
  )

loess_chart_base.transform_loess('age6', 'democracy_importance').mark_line().facet(
    facet = "country:O"
  )
```



